{"mappings":"AACA,MAAM,iBAAiB,SAAS,cAAc;AAC9C,MAAM,QAAQ,SAAS,KAAK,CAAC,EAAE;AAC/B,MAAM,YAAY,SAAS,cAAc;AACzC,MAAM,MAAM;AACZ,MAAM,UAAU,SAAS,cAAc;AACvC,MAAM,aAAa,SAAS,cAAc;AAC1C,MAAM,WAAW,SAAS,cAAc;AACxC,MAAM,WAAW,SAAS,cAAc;AACxC,uBAAuB;AACvB,MAAM,YAAY,SAAS,cAAc;AACzC,MAAM,UAAU,UAAU,QAAQ,cAAc;AAChD,IAAI;AAEJ,SAAS,eAAe,KAAK;IACzB,MAAM;IACN,gBAAgB;IAChB,IAAI,UAAU,UAAU,IAAG;QACvB,QAAQ,cAAa,UAAU;QAC/B,MAAM,UAAU,QAAQ,UAAU;QAClC,eAAe,OAAO;QACtB,UAAU,QAAQ;IACtB,OACI,MAAM;AAEd;AACA,eAAe,UAAU,CAAC;IACtB,EAAE;IACF,IAAI,QAAQ,WAAW;IACvB,MAAM,MAAM,KAAK;QACb,QAAQ;QACR,SAAS;YACL,gBAAgB;QACpB;QACA,MAAM,KAAK,UAAU;YAAE;QAAM;IACjC;IACA,IAAI;QACA,WAAW,QAAQ;QACnB,MAAM;IACV,EAAE,OAAO,KAAK;QACV,MAAM;IACV;AACJ;AAEA,SAAS,UAAW,CAAC;IACjB,EAAE;IACH,MAAM,QAAQ,SAAS;IACtB,SAAS,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC;IAClC,QAAQ,IAAI;IACZ;AACJ;AACA,SAAS,UAAU,IAAI;IACnB,IAAI,UAAU,SAAS,OAAO,MAAM,IAAI,OACpC,aAAa,KAAK,QAAQ,gCAAgC,UAAU;IAExE,OAAO,UAAU,mBAAmB,OAAO,CAAC,EAAE,IAAI;AACtD;AAEA,eAAe;IAEX,IAAI,QAAQ,UAAU;IACtB,IAAI,OAAO;QAAE,MAAK;IAAS;IAC3B,MAAM,MAAM,KAAI;QACZ,QAAQ;QACR,SAAS;YACL,gBAAgB;YAChB,iBAAiB,CAAC,OAAO,EAAE,MAAM,CAAC;QACtC;QACA,MAAM,KAAK,UAAU;IACzB;AACJ;AAMA,SAAS;IACL,MAAM,MAAM;IACZ,iCAAiC;IACjC,mCAAmC;IACnC,MAAM,KAAK;QACP,SAAS;YACL,iBAAiB;QACrB;IACJ,GACK,KAAK,CAAA;QACF,6BAA6B;QAC7B,IAAI,SAAS,IACT,OAAO,SAAS;QAEpB,8BAA8B;QAC9B,MAAM,IAAI,MAAM;IACpB,GACC,KAAK,CAAA;QACF,8BAA8B;QAC9B,QAAQ,IAAI;IAChB,GACC,MAAM,CAAA;QACH,mBAAmB;QACnB,QAAQ,MAAM;IAClB;AACR;AACA;AAIA,QAAQ,IAAI,UAAU;AAEtB,QAAQ,iBAAiB,SAAQ;AACjC,MAAM,iBAAiB,UAAS;AAChC,SAAS,iBAAiB,SAAS","sources":["script.js"],"sourcesContent":["\nconst correspondence = document.querySelector('.correspondence')\nconst forms = document.forms[0]\nconst inputForm = document.querySelector('.input')\nconst api = 'https://edu.strada.one/api/user';\nconst sendBtn = document.querySelector('.get-pass')\nconst emailValue = document.querySelector('#valid-email')\nconst validKey = document.querySelector('#valid-key')\nconst enterBtn = document.querySelector('#enter')\n// иниализация template\nconst myMessage = document.querySelector('#my-message')\nconst spanMsg = myMessage.content.querySelector(\"span\")\nlet msg;\n\nfunction printMyMessage(event){\n    event.preventDefault();\n    // дубликат узла\n    if (inputForm.value !== ''){\n        spanMsg.textContent =inputForm.value\n        msg = myMessage.content.cloneNode(true)\n        correspondence.append(msg)\n        inputForm.value = \"\"\n    } else {\n        alert('введи что нибудь для отправки')\n    }\n}\nasync function postEmail(e) {\n    e.preventDefault();\n    let email = emailValue.value\n    await fetch(api, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n        },\n        body: JSON.stringify({ email }),\n    });\n    try {\n        emailValue.value = ''\n        alert('Код отправлен, проверь почту')\n    } catch (err) {\n        alert('Неполадки на сервере, повтори позже')\n    }\n}\n\nfunction setCookie (e) {\n    e.preventDefault()\n   const token = validKey.value\n    document.cookie = `token=${token}`\n    console.log('кука сохранена')\n    validation()\n}\nfunction getCookie(name) {\n    let matches = document.cookie.match(new RegExp(\n        \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\n    ));\n    return matches ? decodeURIComponent(matches[1]) : undefined;\n}\n\nasync function validation (){\n\n    let token = getCookie('token')\n    let data = { name:\"Nikita\" };\n    await fetch(api,{\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json;charset=utf-8',\n            'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify(data)\n    })\n}\n\n\n\n\n\nfunction getUserData() {\n    const url = 'https://edu.strada.one/api/user/me';\n    // let token = getCookie('token')\n    // Отправка GET-запроса на эндпоинт\n    fetch(url, {\n        headers: {\n            'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InVzYS1uaWtpdGFAeWFuZGV4LnJ1IiwiaWF0IjoxNjg4MzIzNTU0LCJleHAiOjE2OTE5MTk5NTR9.KkR4yhRZCn1HA2aNnIwUdXHbqTRPUjuxCCEVj6qOCHM'\n        }\n    })\n        .then(response => {\n            // Обработка успешного ответа\n            if (response.ok) {\n                return response.json();\n            }\n            // Обработка ошибочного ответа\n            throw new Error('Ошибка при выполнении запроса.');\n        })\n        .then(data => {\n            // Обработка полученных данных\n            console.log(data);\n        })\n        .catch(error => {\n            // Обработка ошибок\n            console.error(error);\n        });\n}\ngetUserData();\n\n\n\nconsole.log(getCookie('token'))\n\nsendBtn.addEventListener('click',postEmail)\nforms.addEventListener('submit',printMyMessage)\nenterBtn.addEventListener('click', setCookie)"],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}